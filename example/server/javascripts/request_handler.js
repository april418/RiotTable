// Generated by CoffeeScript 1.12.3
(function() {
  var MINE_TYPES, RequestHandler, fs, path,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  fs = require('fs');

  path = require('path');

  MINE_TYPES = {
    '.html': 'text/html',
    '.css': 'text/css',
    '.js': 'text/javascript',
    '.jpg': 'image/jpg',
    '.png': 'image/png',
    '.mp3': 'audio/mpeg'
  };

  RequestHandler = (function() {
    function RequestHandler() {
      this.handle = bind(this.handle, this);
    }

    RequestHandler.prototype.handle = function(filePath, requestData, response) {
      return fs.exists(filePath, function(result) {
        if (result) {
          return fs.readFile(filePath, function(error, file) {
            if (error) {
              console.log("failed to open file. file path: " + filePath + ", error: " + error);
              response.writeHeader(500);
              return response.end('Internal Server Error.');
            } else {
              console.log("success to open file. file path: " + filePath);
              response.writeHeader(200, {
                'Content-Type': MINE_TYPES[path.extname(filePath)]
              });
              return response.end(file);
            }
          });
        } else {
          console.log("file not found. file path: " + filePath);
          response.writeHeader(404);
          return response.end('File not found.');
        }
      });
    };

    return RequestHandler;

  })();

  module.exports = RequestHandler;

}).call(this);
